//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_TIEMBANH.SanPham {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SanPham.ISanPham")]
    public interface ISanPham {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/InsertSanPham", ReplyAction="http://tempuri.org/ISanPham/InsertSanPhamResponse")]
        void InsertSanPham(string tensp, int soluong, float giaban, System.DateTime ngaynhap, string anh, string ghichu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/InsertSanPham", ReplyAction="http://tempuri.org/ISanPham/InsertSanPhamResponse")]
        System.Threading.Tasks.Task InsertSanPhamAsync(string tensp, int soluong, float giaban, System.DateTime ngaynhap, string anh, string ghichu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/showGV", ReplyAction="http://tempuri.org/ISanPham/showGVResponse")]
        System.Data.DataTable showGV();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/showGV", ReplyAction="http://tempuri.org/ISanPham/showGVResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> showGVAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/UpdateSanPham", ReplyAction="http://tempuri.org/ISanPham/UpdateSanPhamResponse")]
        void UpdateSanPham(int masp, string tensp, int soluong, float giaban, System.DateTime ngaynhap, string anh, string ghichu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/UpdateSanPham", ReplyAction="http://tempuri.org/ISanPham/UpdateSanPhamResponse")]
        System.Threading.Tasks.Task UpdateSanPhamAsync(int masp, string tensp, int soluong, float giaban, System.DateTime ngaynhap, string anh, string ghichu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/DelSanPham", ReplyAction="http://tempuri.org/ISanPham/DelSanPhamResponse")]
        void DelSanPham(int masp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/DelSanPham", ReplyAction="http://tempuri.org/ISanPham/DelSanPhamResponse")]
        System.Threading.Tasks.Task DelSanPhamAsync(int masp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/SearchSanPham", ReplyAction="http://tempuri.org/ISanPham/SearchSanPhamResponse")]
        System.Data.DataTable SearchSanPham(string tensp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanPham/SearchSanPham", ReplyAction="http://tempuri.org/ISanPham/SearchSanPhamResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchSanPhamAsync(string tensp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISanPhamChannel : QL_TIEMBANH.SanPham.ISanPham, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SanPhamClient : System.ServiceModel.ClientBase<QL_TIEMBANH.SanPham.ISanPham>, QL_TIEMBANH.SanPham.ISanPham {
        
        public SanPhamClient() {
        }
        
        public SanPhamClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SanPhamClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SanPhamClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SanPhamClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertSanPham(string tensp, int soluong, float giaban, System.DateTime ngaynhap, string anh, string ghichu) {
            base.Channel.InsertSanPham(tensp, soluong, giaban, ngaynhap, anh, ghichu);
        }
        
        public System.Threading.Tasks.Task InsertSanPhamAsync(string tensp, int soluong, float giaban, System.DateTime ngaynhap, string anh, string ghichu) {
            return base.Channel.InsertSanPhamAsync(tensp, soluong, giaban, ngaynhap, anh, ghichu);
        }
        
        public System.Data.DataTable showGV() {
            return base.Channel.showGV();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> showGVAsync() {
            return base.Channel.showGVAsync();
        }
        
        public void UpdateSanPham(int masp, string tensp, int soluong, float giaban, System.DateTime ngaynhap, string anh, string ghichu) {
            base.Channel.UpdateSanPham(masp, tensp, soluong, giaban, ngaynhap, anh, ghichu);
        }
        
        public System.Threading.Tasks.Task UpdateSanPhamAsync(int masp, string tensp, int soluong, float giaban, System.DateTime ngaynhap, string anh, string ghichu) {
            return base.Channel.UpdateSanPhamAsync(masp, tensp, soluong, giaban, ngaynhap, anh, ghichu);
        }
        
        public void DelSanPham(int masp) {
            base.Channel.DelSanPham(masp);
        }
        
        public System.Threading.Tasks.Task DelSanPhamAsync(int masp) {
            return base.Channel.DelSanPhamAsync(masp);
        }
        
        public System.Data.DataTable SearchSanPham(string tensp) {
            return base.Channel.SearchSanPham(tensp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchSanPhamAsync(string tensp) {
            return base.Channel.SearchSanPhamAsync(tensp);
        }
    }
}
